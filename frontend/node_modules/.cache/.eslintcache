[{"/Users/jsc/Desktop/paran_project/Ari/frontend/src/index.js":"1","/Users/jsc/Desktop/paran_project/Ari/frontend/src/App.js":"2","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/SignupUser.js":"3","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/LoginUser.js":"4","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/LoginStore.js":"5","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/Login.js":"6","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/LoginRegister.js":"7","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/SignupStore.js":"8","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/Main.js":"9","/Users/jsc/Desktop/paran_project/Ari/frontend/src/state.js":"10","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/SideBar.js":"11","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/Header.js":"12","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/common/Mainbutton.js":"13","/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/sign/signStoreData.js":"14","/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/sign/signUserData.js":"15","/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/login/loginData.js":"16","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/SidebarMenu.js":"17"},{"size":410,"mtime":1660037255896,"results":"18","hashOfConfig":"19"},{"size":1056,"mtime":1660037255896,"results":"20","hashOfConfig":"19"},{"size":12627,"mtime":1660201158991,"results":"21","hashOfConfig":"19"},{"size":2879,"mtime":1660037255896,"results":"22","hashOfConfig":"19"},{"size":1200,"mtime":1660037255896,"results":"23","hashOfConfig":"19"},{"size":3826,"mtime":1660037255896,"results":"24","hashOfConfig":"19"},{"size":1072,"mtime":1660037255896,"results":"25","hashOfConfig":"19"},{"size":11238,"mtime":1660037255897,"results":"26","hashOfConfig":"19"},{"size":844,"mtime":1660201001642,"results":"27","hashOfConfig":"19"},{"size":398,"mtime":1660037255897,"results":"28","hashOfConfig":"19"},{"size":1858,"mtime":1660201001642,"results":"29","hashOfConfig":"19"},{"size":341,"mtime":1660037255896,"results":"30","hashOfConfig":"19"},{"size":668,"mtime":1660037255896,"results":"31","hashOfConfig":"19"},{"size":510,"mtime":1660037255897,"results":"32","hashOfConfig":"19"},{"size":578,"mtime":1660201158991,"results":"33","hashOfConfig":"19"},{"size":404,"mtime":1660037255897,"results":"34","hashOfConfig":"19"},{"size":816,"mtime":1660037255896,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1iyhkkm",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"39"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"39"},"/Users/jsc/Desktop/paran_project/Ari/frontend/src/index.js",[],[],["92","93"],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/App.js",["94"],[],"import { useState } from \"react\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport Main from \"./components/Main\";\nimport LoginRegister from \"./components/LoginRegister\";\nimport Login from \"./pages/Login\";\nimport LoginUser from \"./pages/LoginUser\";\nimport LoginStore from \"./pages/LoginStore\";\nimport SignupUser from \"./pages/SignupUser\";\nimport SignupStore from \"./pages/SignupStore\";\nimport { RecoilRoot } from \"recoil\";\nfunction App() {\n  return (\n    <RecoilRoot>\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/\" element={<Main />}></Route>\n          <Route path=\"/loginRegister\" element={<LoginRegister />}></Route>\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/loginUser\" element={<LoginUser />} />\n          <Route path=\"/loginStore\" element={<LoginStore />} />\n          <Route path=\"/signupUser\" element={<SignupUser />} />\n          <Route path=\"/signupStore\" element={<SignupStore />} />\n        </Routes>\n      </BrowserRouter>\n    </RecoilRoot>\n  );\n}\n\nexport default App;\n","/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/SignupUser.js",["95","96","97"],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/LoginUser.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/LoginStore.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/Login.js",["98","99"],[],"import { React, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { loginData } from \"../services/login/loginData\";\nimport { emailState, nicknameState } from \"../state\";\n\nconst LogoContainer = styled.div`\n    width: 170px;\n    height: 75px;\n    background: #D9D9D9;\n    margin: 72px auto;\n`;\n\nconst Input = styled.input`\n  width: 230px;\n  line-height: 22px;\n  border: 1px solid #dcdcdc;\n  border-radius: 5px;\n  padding: 9px 14px;\n  &::placeholder {\n    color: #a3a3a3;\n  }\n`;\n\nconst SubContainer = styled.div`\n  width: 260px;\n  margin: 0 auto;\n  font-size: 12px;\n  color: #4e514f;\n`;\n\nconst SubAlign = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst LoginButton = styled.button`\n  width: 260px;\n  height: 41px;\n  border-style: initial;\n  border-radius: 15px;\n  color: #ffffff;\n  margin-bottom: 10px;\n  background: #386ffe;\n  &:disabled {\n    background: #dcdcdc;\n  }\n`;\n\nconst InputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Formbox = styled.div`\n  position: relative;\n  margin-bottom: 20px;\n  .message {\n    font-size: 11px;\n    letter-spacing: -1px;\n    position: absolute;\n    bottom: -10px;\n    left: 0;\n    &.success {\n      color: #8f8c8b;\n    }\n    &.error {\n      color: #ff2727;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Login = () => {\n  const [uEmail, setuEmail] = useRecoilState(emailState);\n  const [uNickname, setuNickname] = useRecoilState(nicknameState);\n\n  const navigate = useNavigate();\n\n  const [inputs, setInputs] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = inputs;\n\n  const onChange = (e) => {\n    const { name, value } = e.target;\n    setInputs({\n      ...inputs,\n      [name]: value,\n    });\n  };\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    const result = await loginData({\n      email: email,\n      password: password,\n    });\n\n    if (result === \"\") {\n      // 해당하는 회원 정보가 없는 경우 로그인 실패\n      alert(\"이메일 또는 비밀번호가 일치하지 않습니다.\");\n    } else {\n      // 로그인 성공\n      setuEmail(result.email); // recoil\n      setuNickname(result.nickname); // recoil\n\n      alert(\"로그인이 완료되었습니다.\");\n      navigate(\"/main\"); // 메인 페이지로 이동\n    }\n  };\n\n  return (\n    <>\n      <LogoContainer></LogoContainer>\n      <form onSubmit={onSubmit}>\n        <InputContainer>\n          <Formbox>\n            <Input\n              name=\"email\"\n              value={email}\n              type=\"email\"\n              onChange={onChange}\n              placeholder=\"이메일 주소 입력\"\n              required\n              autoComplete=\"off\"\n            />\n          </Formbox>\n          <Formbox>\n            <Input\n              name=\"password\"\n              value={password}\n              type=\"password\"\n              onChange={onChange}\n              placeholder=\"비밀번호 입력\"\n              required\n              autoComplete=\"off\"\n            />\n          </Formbox>\n        </InputContainer>\n        <ButtonContainer>\n          <LoginButton\n            type=\"submit\"\n            disabled={email !== \"\" && password !== \"\" ? false : true}\n          >\n            로그인\n          </LoginButton>\n        </ButtonContainer>\n        <SubContainer>\n          <SubAlign>\n            <Link to=\"/loginRegister\">\n              <span>이메일 회원가입</span>\n            </Link>\n            <span>이메일 찾기</span>\n            <span>비밀번호 찾기</span>\n          </SubAlign>\n        </SubContainer>\n      </form>\n    </>\n  );\n};\n\nexport default Login;\n","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/LoginRegister.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/pages/SignupStore.js",["100"],[],"import { React, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport MainButton from '../components/common/Mainbutton';\nimport { useRecoilState } from 'recoil';\nimport { signStoreData } from '../services/sign/signStoreData';\nimport { nicknameState } from '../state';\n\nconst Intro = styled.div`\n    color: #3D3D3D;\n`;\n\nconst Input = styled.input`\n    width: 230px;\n    line-height: 22px;\n    border: 1px solid #DCDCDC;\n    border-radius: 5px;\n    padding: 9px 14px;\n    &::placeholder {\n        color: #A3A3A3;\n    }\n`;\n\nconst CertificationInput = styled.input`\n    width: 142px;\n    line-height: 22px;\n    border: 1px solid #DCDCDC;\n    border-radius: 5px;\n    padding: 9px 14px;\n    margin-bottom: 21px;\n    &::placeholder {\n        color: #A3A3A3;\n    }\n`;\n\nconst SendButton = styled.button`\n    width: 76px;\n    line-height: 41px;\n    border-style: initial;\n    border-radius: 5px;\n    color: #FFFFFF;\n    background: #386FFE;\n    margin-bottom: 11px;\n    margin-left: 12px;\n`;\n\nconst InputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 83px;\n    margin-bottom: 65px;\n`;\n\nconst Formbox = styled.div`\n    margin-bottom: 20px;\n    .message {\n        font-size: 11px;\n        letter-spacing: -1px;\n        margin: 0;\n        &.success {\n            color: #8f8c8b;\n        }\n        &.error {\n            color: #ff2727;\n        }\n    }\n`;\n\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nconst SignupUser = () => {\n    const [uNickname, setuNickname] = useRecoilState(nicknameState);\n\n    const navigate = useNavigate();\n\n    // 이메일, 비밀번호, 닉네임, 가게 인증 코드\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [nickname, setNickname] = useState(\"\");\n    const [storeCode, setStoreCode] = useState(\"\");\n\n    // 오류 메세지 상태 저장\n    const [emailMessage, setEmailMessage] = useState(\"\");\n    const [passwordMessage, setPasswordMessage] = useState(\"\");\n    const [nicknameMessage, setNicknameMessage] = useState(\"\");\n    const [storeCodeMessage, setStoreCodeMessage] = useState(\"\");\n\n    // 유효성 검사\n    const [isEmail, setIsEmail] = useState(false);\n    const [isPassword, setIsPassword] = useState(false);\n    const [isNickname, setIsNickname] = useState(false);\n    const [isStoreCode, setIsStoreCode] = useState(false);\n\n    // 이메일\n    const onChangeEmail = (e) => {\n        const emailRegex =\n            /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n        setEmail(e.target.value);\n\n        if (!emailRegex.test(e.target.value)) {\n            setEmailMessage('이메일 형식을 다시 확인해주세요.');\n            setIsEmail(false);\n        } else {\n            setEmailMessage('올바른 이메일 형식입니다.');\n            setIsEmail(true);\n        }\n    };\n\n    // 비밀번호\n    const onChangePassword = (e) => {\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n        setPassword(e.target.value);\n\n        if (!passwordRegex.test(e.target.value)) {\n            setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.');\n            setIsPassword(false);\n        } else {\n            setPasswordMessage('안전한 비밀번호입니다.');\n            setIsPassword(true);\n        }\n    };\n\n    // 닉네임\n    const onChangeNickname = (e) => {\n        setNickname(e.target.value)\n        if (e.target.value.length < 2 || e.target.value.length > 5) {\n            setNicknameMessage('2글자 이상 5글자 미만으로 입력해주세요.');\n            setIsNickname(false);\n        } else {\n            setNicknameMessage('올바른 닉네임 형식입니다.')\n            setIsNickname(true)\n        }\n    };\n\n    // 가게 인증 코드\n    const onChangeStoreCode = (e) => {\n        setStoreCode(e.target.value);\n    };\n\n    // 입력한 인증번호\n    const [certificationNumber, setCertificationNumber] = useState(\"\");\n\n    const onChangeCertificationNumber = (e) => {\n        setCertificationNumber(e.target.value);\n    };\n\n    // 인증번호 확인\n    const [emailCheck, setEmailCheck] = useState(\"\");\n    const [emailCheckMessage, setEmailCheckMessage] = useState(\"\");\n    const [isEmailCheck, setIsEmailCheck] = useState(false);\n\n    // 이메일로 인증번호 보내고, 보낸 인증번호를 emailCheck에 저장\n    const getEmailCheck = async () => {\n        try {\n            await axios\n                .get(`http://.../signup/certification?email=${email}`)\n                .then((res) => {\n                    console.log(res.data);\n                    setEmailCheck(res.data);\n                });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const onEmailCheck = () => {\n        console.log(certificationNumber);\n        console.log(emailCheck);\n        if (certificationNumber !== emailCheck) {\n            setEmailCheckMessage('잘못된 인증번호입니다.');\n            setIsEmailCheck(false);\n        } else {\n            setEmailCheckMessage('인증에 성공했습니다.');\n            setIsEmailCheck(true);\n        }\n    };\n\n    // 존재하는 가게 인증 번호인지 확인, isStoreCode에 true/false 저장\n    const getStoreCode = async (storeCode) => {\n        try {\n            await axios\n                .get(`http://.../storeCode?${storeCode}`)\n                .then((res) => {\n                    console.log(res.data);\n                    setIsStoreCode(res.data);\n                })\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    const checkStoreCode = () => {\n        console.log(storeCode);\n        console.log(isStoreCode);\n        getStoreCode(storeCode);\n\n        if (!isStoreCode) {\n            setStoreCodeMessage('잘못된 가게 인증 번호입니다.');\n            setIsStoreCode(false);\n        } else {\n            setStoreCodeMessage('인증에 성공했습니다.');\n            setIsStoreCode(true);\n        }\n    };\n    \n    const onSubmit = async (e) => {\n        e.preventDefault();\n        checkStoreCode(); // 가게 인증 번호 확인\n        if (!isStoreCode) return;\n\n        const result = await signStoreData({\n            email: email,\n            password: password,\n            nickname: nickname,\n            storeCode: storeCode,\n        });\n        setuNickname(result); // recoil\n\n        alert(\"회원가입이 완료되었습니다.\");\n        navigate(\"/login\"); // 로그인 공통 페이지로 이동\n    }\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <InputContainer>\n                    <Formbox>\n                        <Intro>이메일 주소</Intro>\n                        <Input\n                            name=\"email\"\n                            value={email}\n                            type=\"email\"\n                            onChange={onChangeEmail}\n                            placeholder=\"이메일 주소 입력\"\n                            required\n                            autoComplete=\"off\"\n                        />\n                        {email.length > 0 && <p className={`message ${isEmail ? 'success' : 'error'}`}>{emailMessage}</p>}\n                    </Formbox>\n                    <Formbox>\n                        <Intro>비밀번호</Intro>\n                        <Input\n                            name=\"password\"\n                            value={password}\n                            type=\"password\"\n                            onChange={onChangePassword}\n                            placeholder=\"비밀번호 입력\"\n                            required\n                            autoComplete=\"off\"\n                        />\n                        {password.length > 0 && <p className={`message ${isPassword ? 'success' : 'error'}`}>{passwordMessage}</p>}\n                    </Formbox>\n                    <Formbox>\n                        <Intro>닉네임</Intro>\n                        <Input\n                            name=\"nickname\"\n                            value={nickname}\n                            type=\"text\"\n                            onChange={onChangeNickname}\n                            placeholder=\"닉네임 입력\"\n                            required\n                            autoComplete=\"off\"\n                        />\n                        {nickname.length > 0 && <p className={`message ${isNickname ? 'success' : 'error'}`}>{nicknameMessage}</p>}\n                    </Formbox>\n                    <Formbox>\n                        <Intro>가게 인증</Intro>\n                        <Input\n                            name=\"storeCode\"\n                            value={storeCode}\n                            type=\"text\"\n                            onChange={onChangeStoreCode}\n                            placeholder=\"가게 인증 코드 입력\"\n                            required\n                            autoComplete=\"off\"\n                        />\n                        {storeCode.length > 0 && <p className={`message ${isStoreCode ? 'success' : 'error'}`}>{storeCodeMessage}</p>}\n                    </Formbox>\n                    <Formbox>\n                        <Intro>메일 인증</Intro>\n                        <div>\n                            <CertificationInput\n                                name=\"certificationNumber\"\n                                value={certificationNumber}\n                                type=\"text\"\n                                onChange={onChangeCertificationNumber}\n                                placeholder=\"인증번호 입력\"\n                                required\n                                autoComplete=\"off\"\n                            />\n                            <SendButton type=\"button\" onClick={getEmailCheck}>전송</SendButton>\n                        </div>\n                        <MainButton\n                            radius=\"5px\"\n                            color=\"#FFFFFF\"\n                            background=\"#386FFE;\"\n                            type=\"button\"\n                            onClick={onEmailCheck}\n                            disabled={(certificationNumber.length > 0) ? false : true}\n                            text=\"인증 확인\"\n                        />\n                        {certificationNumber.length > 0 && <p className={`message ${isEmailCheck ? 'success' : 'error'}`}>{emailCheckMessage}</p>}\n                    </Formbox>\n                </InputContainer>\n                <ButtonContainer>\n                    <MainButton\n                        radius=\"15px\"\n                        color=\"#FFFFFF\"\n                        background=\"#386FFE;\"\n                        type=\"submit\"\n                        disabled={(isNickname && isEmail && isPassword && isEmailCheck) ? false : true}\n                        text=\"회원가입\"\n                    />\n                </ButtonContainer>\n            </form>\n        </>\n    )\n}\n\nexport default SignupUser;","/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/Main.js",["101"],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/state.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/SideBar.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/Header.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/common/Mainbutton.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/sign/signStoreData.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/sign/signUserData.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/services/login/loginData.js",[],[],"/Users/jsc/Desktop/paran_project/Ari/frontend/src/components/SidebarMenu.js",["102"],[],"import React from \"react\";\nimport \"../App.css\";\nimport \"../styles/SidebarMenu.css\";\nimport { Link } from \"react-router-dom\";\n\nconst SidebarMenu = (userState) => {\n  const menuForGuest = [\n    \"공지사항\",\n    \"즐겨찾기\",\n    \"마이페이지\",\n    \"문의하기\",\n    \"마이 스탬프\",\n  ];\n  const menuForBusiness = [\n    \"공지사항\",\n    \"내 가게 정보 관리\",\n    \"제휴 맺기 게시판\",\n    \"채팅 목록\",\n    \"문의하기\",\n  ];\n\n  return (\n    <div className=\"menuListContainer\">\n      {userState.userState === 1\n        ? menuForGuest.map((item, index) => {\n            return <span key={index}>{item}</span>;\n          })\n        : menuForBusiness.map((item, index) => {\n            return <span key={index}>{item}</span>;\n          })}\n    </div>\n  );\n};\n\nexport default SidebarMenu;\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":18},{"ruleId":"107","severity":1,"message":"111","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":22},{"ruleId":"107","severity":1,"message":"112","line":78,"column":12,"nodeType":"109","messageId":"110","endLine":78,"endColumn":21},{"ruleId":"107","severity":1,"message":"113","line":78,"column":23,"nodeType":"109","messageId":"110","endLine":78,"endColumn":35},{"ruleId":"107","severity":1,"message":"114","line":82,"column":10,"nodeType":"109","messageId":"110","endLine":82,"endColumn":16},{"ruleId":"107","severity":1,"message":"112","line":83,"column":10,"nodeType":"109","messageId":"110","endLine":83,"endColumn":19},{"ruleId":"107","severity":1,"message":"112","line":78,"column":12,"nodeType":"109","messageId":"110","endLine":78,"endColumn":21},{"ruleId":"107","severity":1,"message":"115","line":2,"column":10,"nodeType":"109","messageId":"110","endLine":2,"endColumn":14},{"ruleId":"107","severity":1,"message":"115","line":4,"column":10,"nodeType":"109","messageId":"110","endLine":4,"endColumn":14},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'signUserData' is defined but never used.","'uNickname' is assigned a value but never used.","'setuNickname' is assigned a value but never used.","'uEmail' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]