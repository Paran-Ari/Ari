[{"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\index.js":"1","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\App.js":"2","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\LoginStore.js":"3","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\LoginRegister.js":"4","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\SignupUser.js":"5","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\Main.js":"6","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\LoginUser.js":"7","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\Login.js":"8","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\SignupStore.js":"9","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\state.js":"10","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\SideBar.js":"11","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\Header.js":"12","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\common\\Mainbutton.js":"13","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\sign\\signStoreData.js":"14","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\sign\\signUserData.js":"15","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\login\\loginData.js":"16","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\SidebarMenu.js":"17","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\map\\Map.js":"18","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\StoreModal.js":"19","C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\map\\KakaoMapScript.js":"20"},{"size":424,"mtime":1660201151627,"results":"21","hashOfConfig":"22"},{"size":1085,"mtime":1660201151621,"results":"23","hashOfConfig":"22"},{"size":1244,"mtime":1660201151628,"results":"24","hashOfConfig":"22"},{"size":1110,"mtime":1660201151623,"results":"25","hashOfConfig":"22"},{"size":12982,"mtime":1660201983641,"results":"26","hashOfConfig":"22"},{"size":875,"mtime":1660202020584,"results":"27","hashOfConfig":"22"},{"size":2967,"mtime":1660201151630,"results":"28","hashOfConfig":"22"},{"size":3999,"mtime":1660201151628,"results":"29","hashOfConfig":"22"},{"size":11563,"mtime":1660201151630,"results":"30","hashOfConfig":"22"},{"size":416,"mtime":1660201151636,"results":"31","hashOfConfig":"22"},{"size":1934,"mtime":1660202020584,"results":"32","hashOfConfig":"22"},{"size":357,"mtime":1660201151623,"results":"33","hashOfConfig":"22"},{"size":693,"mtime":1660201151627,"results":"34","hashOfConfig":"22"},{"size":529,"mtime":1660201151635,"results":"35","hashOfConfig":"22"},{"size":599,"mtime":1660201983641,"results":"36","hashOfConfig":"22"},{"size":421,"mtime":1660201151633,"results":"37","hashOfConfig":"22"},{"size":851,"mtime":1660201151625,"results":"38","hashOfConfig":"22"},{"size":1425,"mtime":1660202020586,"results":"39","hashOfConfig":"22"},{"size":1856,"mtime":1660202020585,"results":"40","hashOfConfig":"22"},{"size":1696,"mtime":1660202020586,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jxofvh",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\index.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\App.js",["104"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\LoginStore.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\LoginRegister.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\SignupUser.js",["105","106","107"],[],"import { React, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useRecoilState } from 'recoil';\r\nimport MainButton from '../components/common/Mainbutton';\r\nimport { nicknameState } from '../state';\r\nimport { signUserData } from '../services/sign/signUserData';\r\n\r\nconst Intro = styled.div`\r\n    color: #3D3D3D;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 230px;\r\n    line-height: 22px;\r\n    border: 1px solid #DCDCDC;\r\n    border-radius: 5px;\r\n    padding: 9px 14px;\r\n    &::placeholder {\r\n        color: #A3A3A3;\r\n    }\r\n`;\r\n\r\nconst CertificationInput = styled.input`\r\n    width: 142px;\r\n    line-height: 22px;\r\n    border: 1px solid #DCDCDC;\r\n    border-radius: 5px;\r\n    padding: 9px 14px;\r\n    margin-bottom: 21px;\r\n    &::placeholder {\r\n        color: #A3A3A3;\r\n    }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n    width: 76px;\r\n    line-height: 41px;\r\n    border-style: initial;\r\n    border-radius: 5px;\r\n    color: #FFFFFF;\r\n    background: #386FFE;\r\n    margin-bottom: 11px;\r\n    margin-left: 12px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-top: 83px;\r\n    margin-bottom: 65px;\r\n`;\r\n\r\nconst Formbox = styled.div`\r\n    margin-bottom: 20px;\r\n    .message {\r\n        font-size: 11px;\r\n        letter-spacing: -1px;\r\n        margin: 0;\r\n        &.success {\r\n            color: #8f8c8b;\r\n        }\r\n        &.error {\r\n            color: #ff2727;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst SignupUser = () => {\r\n    const [uNickname, setuNickname] = useRecoilState(nicknameState);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // 이메일, 비밀번호, 닉네임, 연령대, 성별\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n\r\n    // 오류 메세지 상태 저장\r\n    const [emailMessage, setEmailMessage] = useState(\"\");\r\n    const [passwordMessage, setPasswordMessage] = useState(\"\");\r\n    const [nicknameMessage, setNicknameMessage] = useState(\"\");\r\n\r\n    // 유효성 검사\r\n    const [isEmail, setIsEmail] = useState(false);\r\n    const [isPassword, setIsPassword] = useState(false);\r\n    const [isNickname, setIsNickname] = useState(false);\r\n\r\n    // 이메일\r\n    const onChangeEmail = (e) => {\r\n        const emailRegex =\r\n            /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n        setEmail(e.target.value);\r\n\r\n        if (!emailRegex.test(e.target.value)) {\r\n            setEmailMessage('이메일 형식을 다시 확인해주세요.');\r\n            setIsEmail(false);\r\n        } else {\r\n            setEmailMessage('올바른 이메일 형식입니다.');\r\n            setIsEmail(true);\r\n        }\r\n    };\r\n\r\n    // 비밀번호\r\n    const onChangePassword = (e) => {\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n        setPassword(e.target.value);\r\n\r\n        if (!passwordRegex.test(e.target.value)) {\r\n            setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.');\r\n            setIsPassword(false);\r\n        } else {\r\n            setPasswordMessage('안전한 비밀번호입니다.');\r\n            setIsPassword(true);\r\n        }\r\n    };\r\n\r\n    // 닉네임\r\n    const onChangeNickname = (e) => {\r\n        setNickname(e.target.value);\r\n        if (e.target.value.length < 2 || e.target.value.length > 5) {\r\n            setNicknameMessage('2글자 이상 5글자 미만으로 입력해주세요.');\r\n            setIsNickname(false);\r\n        } else {\r\n            setNicknameMessage('올바른 닉네임 형식입니다.');\r\n            setIsNickname(true);\r\n        }\r\n    };\r\n\r\n    // 입력한 인증번호\r\n    const [certificationNumber, setCertificationNumber] = useState(\"\");\r\n\r\n    const onChangeCertificationNumber = (e) => {\r\n        setCertificationNumber(e.target.value);\r\n    };\r\n\r\n    // 인증번호 확인\r\n    const [emailCheck, setEmailCheck] = useState(\"\");\r\n    const [emailCheckMessage, setEmailCheckMessage] = useState(\"\");\r\n    const [isEmailCheck, setIsEmailCheck] = useState(false);\r\n\r\n    // 이메일로 인증번호 보내고, 보낸 인증번호를 emailCheck에 저장\r\n    const getEmailCheck = async () => {\r\n        try {\r\n            await axios\r\n                .get(`http://.../signup/certification?email=${email}`)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setEmailCheck(res.data);\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onEmailCheck = () => {\r\n        console.log(certificationNumber);\r\n        console.log(emailCheck);\r\n        if (certificationNumber !== emailCheck) {\r\n            setEmailCheckMessage('잘못된 인증번호입니다.');\r\n            setIsEmailCheck(false);\r\n        } else {\r\n            setEmailCheckMessage('인증에 성공했습니다.');\r\n            setIsEmailCheck(true);\r\n        }\r\n    };\r\n\r\n    // 연령대 드롭다운\r\n    const onChangeAge = (e) => {\r\n        setAge(e.target.value);\r\n    }\r\n\r\n    // 성별 라디오\r\n    const onChangeGender = (e) => {\r\n        setGender(e.target.value)\r\n    };\r\n    \r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        // const result = await signUserData({\r\n        //     email: email,\r\n        //     password: password,\r\n        //     nickname: nickname,\r\n        //     age: age,\r\n        //     gender: gender,\r\n        // });\r\n\r\n        // const result = async () => {\r\n        //     try {\r\n        //         const response = await axios.post(\r\n        //             \"POST_BASE_URL\",\r\n        //             {\r\n        //                 email: email,\r\n        //                 password: password,\r\n        //                 nickname: nickname,\r\n        //                 age: age,\r\n        //                 gender: gender,\r\n        //             },\r\n        //             { withCredentials: true },\r\n        //         );\r\n        //         return response.data;\r\n        //     } catch (e) {\r\n        //         console.error(e);\r\n        //     }\r\n        // }\r\n        fetch(\"https://api주소\", { // signup User api 주소\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                email: email,\r\n                password: password,\r\n                nickname: nickname,\r\n                age: age,\r\n                gender: gender,\r\n            }),\r\n        })\r\n        .then((response) => {\r\n            if (response.status === 200) {\r\n                return response.json()\r\n            } else {\r\n                console.error(`HTTP error! status: ${response.status}`)\r\n            }\r\n        })\r\n        .then((jsonData) => console.log(jsonData))\r\n        .catch((error) => console.log(error));\r\n\r\n        // setuNickname(result); // recoil\r\n\r\n        alert(\"회원가입이 완료되었습니다.\");\r\n        navigate(\"/login\"); // 로그인 공통 페이지로 이동\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <InputContainer>\r\n                    <Formbox>\r\n                        <Intro>이메일 주소</Intro>\r\n                        <Input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={onChangeEmail}\r\n                            placeholder=\"이메일 주소 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {email.length > 0 && <p className={`message ${isEmail ? 'success' : 'error'}`}>{emailMessage}</p>}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        <Intro>비밀번호</Intro>\r\n                        <Input\r\n                            name=\"password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={onChangePassword}\r\n                            placeholder=\"비밀번호 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {password.length > 0 && <p className={`message ${isPassword ? 'success' : 'error'}`}>{passwordMessage}</p>}\r\n                        {/* 비밀번호 확인 추가하기 */}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        {/* 닉네임 중복 확인도 넣어야 할 듯 */}\r\n                        <Intro>닉네임</Intro>\r\n                        <Input\r\n                            name=\"nickname\"\r\n                            value={nickname}\r\n                            type=\"text\"\r\n                            onChange={onChangeNickname}\r\n                            placeholder=\"닉네임 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {nickname.length > 0 && <p className={`message ${isNickname ? 'success' : 'error'}`}>{nicknameMessage}</p>}\r\n                    </Formbox>\r\n                    \r\n                    <Formbox>\r\n                        <div style={{display: \"flex\", justifyContent: \"space-between\", width: \"260px\"}}>\r\n                            <div>\r\n                                <Intro>연령대</Intro>\r\n                                <select onChange={onChangeAge}>\r\n                                    <option value=\"10대\">10대</option>\r\n                                    <option selected value=\"20대\">20대</option>\r\n                                    <option value=\"30대\">30대</option>\r\n                                    <option value=\"40대\">40대</option>\r\n                                    <option value=\"50대\">50대</option>\r\n                                    <option value=\"60대\">60대</option>\r\n                                    <option value=\"70대\">70대 이상</option>\r\n                                </select>\r\n                            </div>\r\n                            <div>\r\n                                <Intro>성별</Intro>\r\n                                <input type=\"radio\" name=\"gender\" value=\"male\" onChange={onChangeGender} required></input>남성\r\n                                <input type=\"radio\" name=\"gender\" value=\"female\" onChange={onChangeGender}></input>여성\r\n                            </div>\r\n                        </div>\r\n                    </Formbox>\r\n\r\n                    <Formbox>\r\n                        <Intro>메일 인증</Intro>\r\n                        <div>\r\n                            <CertificationInput\r\n                                name=\"certificationNumber\"\r\n                                value={certificationNumber}\r\n                                type=\"text\"\r\n                                onChange={onChangeCertificationNumber}\r\n                                placeholder=\"인증번호 입력\"\r\n                                required\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <SendButton type=\"button\" onClick={getEmailCheck}>전송</SendButton>\r\n                        </div>\r\n                        <MainButton\r\n                            radius=\"5px\"\r\n                            color=\"#FFFFFF\"\r\n                            background=\"#386FFE;\"\r\n                            type=\"button\"\r\n                            onClick={onEmailCheck}\r\n                            disabled={(certificationNumber.length > 0) ? false : true}\r\n                            text=\"인증 확인\"\r\n                        />\r\n                        {certificationNumber.length > 0 && <p className={`message ${isEmailCheck ? 'success' : 'error'}`}>{emailCheckMessage}</p>}\r\n                    </Formbox>\r\n                </InputContainer>\r\n                <ButtonContainer>\r\n                    <MainButton\r\n                        radius=\"15px\"\r\n                        color=\"#FFFFFF\"\r\n                        background=\"#386FFE;\"\r\n                        type=\"submit\"\r\n                        // disabled={(isNickname && isEmail && isPassword && isEmailCheck) ? false : true}\r\n                        disabled={(isNickname && isEmail && isPassword) ? false : true}\r\n                        text=\"회원가입\"\r\n                    />\r\n                </ButtonContainer>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupUser;",[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\Main.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\LoginUser.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\Login.js",["108","109"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\pages\\SignupStore.js",["110"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\state.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\SideBar.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\Header.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\common\\Mainbutton.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\sign\\signStoreData.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\sign\\signUserData.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\login\\loginData.js",[],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\SidebarMenu.js",["111"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\map\\Map.js",["112"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\components\\StoreModal.js",["113"],[],"C:\\Users\\김우진\\Desktop\\파란학기\\프로젝트\\frontend\\src\\services\\map\\KakaoMapScript.js",[],[],{"ruleId":"114","severity":1,"message":"115","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":18},{"ruleId":"114","severity":1,"message":"118","line":8,"column":10,"nodeType":"116","messageId":"117","endLine":8,"endColumn":22},{"ruleId":"114","severity":1,"message":"119","line":78,"column":12,"nodeType":"116","messageId":"117","endLine":78,"endColumn":21},{"ruleId":"114","severity":1,"message":"120","line":78,"column":23,"nodeType":"116","messageId":"117","endLine":78,"endColumn":35},{"ruleId":"114","severity":1,"message":"121","line":82,"column":10,"nodeType":"116","messageId":"117","endLine":82,"endColumn":16},{"ruleId":"114","severity":1,"message":"119","line":83,"column":10,"nodeType":"116","messageId":"117","endLine":83,"endColumn":19},{"ruleId":"114","severity":1,"message":"119","line":78,"column":12,"nodeType":"116","messageId":"117","endLine":78,"endColumn":21},{"ruleId":"114","severity":1,"message":"122","line":4,"column":10,"nodeType":"116","messageId":"117","endLine":4,"endColumn":14},{"ruleId":"123","severity":1,"message":"124","line":29,"column":6,"nodeType":"125","endLine":29,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":38,"column":7,"nodeType":"129","endLine":38,"endColumn":74},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'signUserData' is defined but never used.","'uNickname' is assigned a value but never used.","'setuNickname' is assigned a value but never used.","'uEmail' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onMarkerClicked'. Either include it or remove the dependency array.","ArrayExpression",["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"131","fix":"132"},"Update the dependencies array to be: [onMarkerClicked]",{"range":"133","text":"134"},[920,922],"[onMarkerClicked]"]