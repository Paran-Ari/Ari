{"ast":null,"code":"var _jsxFileName = \"/Users/yeoinsu/Desktop/Ari/frontend/src/pages/SignupUser.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport { useRecoilState } from 'recoil';\nimport MainButton from '../components/common/Mainbutton';\nimport { nicknameState } from '../state';\nimport { signUserData } from '../services/sign/signUserData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Intro = styled.div`\n    color: #3D3D3D;\n`;\n_c = Intro;\nconst Input = styled.input`\n    width: 230px;\n    line-height: 22px;\n    border: 1px solid #DCDCDC;\n    border-radius: 5px;\n    padding: 9px 14px;\n    &::placeholder {\n        color: #A3A3A3;\n    }\n`;\n_c2 = Input;\nconst CertificationInput = styled.input`\n    width: 142px;\n    line-height: 22px;\n    border: 1px solid #DCDCDC;\n    border-radius: 5px;\n    padding: 9px 14px;\n    margin-bottom: 21px;\n    &::placeholder {\n        color: #A3A3A3;\n    }\n`;\n_c3 = CertificationInput;\nconst SendButton = styled.button`\n    width: 76px;\n    line-height: 41px;\n    border-style: initial;\n    border-radius: 5px;\n    color: #FFFFFF;\n    background: #386FFE;\n    margin-bottom: 11px;\n    margin-left: 12px;\n`;\n_c4 = SendButton;\nconst InputContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 65px;\n`;\n_c5 = InputContainer;\nconst Formbox = styled.div`\n    margin-bottom: 20px;\n    .message {\n        font-size: 11px;\n        letter-spacing: -1px;\n        margin: 0;\n        &.success {\n            color: #8f8c8b;\n        }\n        &.error {\n            color: #ff2727;\n        }\n    }\n`;\n_c6 = Formbox;\nconst ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 83px;\n`;\n_c7 = ButtonContainer;\n\nconst SignupUser = () => {\n  _s();\n\n  const [uNickname, setuNickname] = useRecoilState(nicknameState);\n  const navigate = useNavigate(); // 이메일, 비밀번호, 닉네임, 생년월일\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [nickname, setNickname] = useState(\"\");\n  const [birthday, setBirthday] = useState(\"\"); // 오류 메세지 상태 저장\n\n  const [emailMessage, setEmailMessage] = useState(\"\");\n  const [passwordMessage, setPasswordMessage] = useState(\"\");\n  const [nicknameMessage, setNicknameMessage] = useState(\"\");\n  const [birthdayMessage, setBirthdayMessage] = useState(\"\"); // 유효성 검사\n\n  const [isEmail, setIsEmail] = useState(false);\n  const [isPassword, setIsPassword] = useState(false);\n  const [isNickname, setIsNickname] = useState(false);\n  const [isBirthday, setIsBirthday] = useState(false); // 이메일\n\n  const onChangeEmail = e => {\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    setEmail(e.target.value);\n\n    if (!emailRegex.test(e.target.value)) {\n      setEmailMessage('이메일 형식을 다시 확인해주세요.');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('올바른 이메일 형식입니다.');\n      setIsEmail(true);\n    }\n  }; // 비밀번호\n\n\n  const onChangePassword = e => {\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\n    setPassword(e.target.value);\n\n    if (!passwordRegex.test(e.target.value)) {\n      setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.');\n      setIsPassword(false);\n    } else {\n      setPasswordMessage('안전한 비밀번호입니다.');\n      setIsPassword(true);\n    }\n  }; // 닉네임\n\n\n  const onChangeNickname = e => {\n    setNickname(e.target.value);\n\n    if (e.target.value.length < 2 || e.target.value.length > 5) {\n      setNicknameMessage('2글자 이상 5글자 미만으로 입력해주세요.');\n      setIsNickname(false);\n    } else {\n      setNicknameMessage('올바른 닉네임 형식입니다.');\n      setIsNickname(true);\n    }\n  }; // 생년월일\n\n\n  const onChangeBirthday = e => {\n    const birthdayRegex = /^(19[0-9][0-9]|20\\d{2})(0[0-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\n    setBirthday(e.target.value);\n\n    if (!birthdayRegex.test(e.target.value)) {\n      setBirthdayMessage('생년월일 8자리를 입력해주세요.');\n      setIsBirthday(false);\n    } else {\n      setBirthdayMessage('올바른 생년월일 형식입니다.');\n      setIsBirthday(true);\n    }\n  }; // 입력한 인증번호\n\n\n  const [certificationNumber, setCertificationNumber] = useState(\"\");\n\n  const onChangeCertificationNumber = e => {\n    setCertificationNumber(e.target.value);\n  }; // 인증번호 확인\n\n\n  const [emailCheck, setEmailCheck] = useState(\"\");\n  const [emailCheckMessage, setEmailCheckMessage] = useState(\"\");\n  const [isEmailCheck, setIsEmailCheck] = useState(false); // 이메일로 인증번호 보내고, 보낸 인증번호를 emailCheck에 저장\n\n  const getEmailCheck = async () => {\n    try {\n      await axios.get(`http://.../signup/certification?email=${email}`).then(res => {\n        console.log(res.data);\n        setEmailCheck(res.data);\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const onEmailCheck = () => {\n    console.log(certificationNumber);\n    console.log(emailCheck);\n\n    if (certificationNumber !== emailCheck) {\n      setEmailCheckMessage('잘못된 인증번호입니다.');\n      setIsEmailCheck(false);\n    } else {\n      setEmailCheckMessage('인증에 성공했습니다.');\n      setIsEmailCheck(true);\n    }\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const result = await signUserData({\n      email: email,\n      password: password,\n      nickname: nickname,\n      birthday: birthday\n    });\n    setuNickname(result); // recoil\n\n    alert(\"회원가입이 완료되었습니다.\");\n    navigate(\"/login\"); // 로그인 공통 페이지로 이동\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n        children: [/*#__PURE__*/_jsxDEV(Formbox, {\n          children: [/*#__PURE__*/_jsxDEV(Intro, {\n            children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            value: email,\n            type: \"email\",\n            onChange: onChangeEmail,\n            placeholder: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C \\uC785\\uB825\",\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), email.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isEmail ? 'success' : 'error'}`,\n            children: emailMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 46\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formbox, {\n          children: [/*#__PURE__*/_jsxDEV(Intro, {\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            value: password,\n            type: \"password\",\n            onChange: onChangePassword,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC785\\uB825\",\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), password.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isPassword ? 'success' : 'error'}`,\n            children: passwordMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formbox, {\n          children: [/*#__PURE__*/_jsxDEV(Intro, {\n            children: \"\\uB2C9\\uB124\\uC784\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"nickname\",\n            value: nickname,\n            type: \"text\",\n            onChange: onChangeNickname,\n            placeholder: \"\\uB2C9\\uB124\\uC784 \\uC785\\uB825\",\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 25\n          }, this), nickname.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isNickname ? 'success' : 'error'}`,\n            children: nicknameMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formbox, {\n          children: [/*#__PURE__*/_jsxDEV(Intro, {\n            children: \"\\uC0DD\\uB144\\uC6D4\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"birthday\",\n            value: birthday,\n            type: \"text\",\n            onChange: onChangeBirthday,\n            placeholder: \"\\uC0DD\\uB144\\uC6D4\\uC77C \\uC785\\uB825\",\n            required: true,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 25\n          }, this), birthday.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isBirthday ? 'success' : 'error'}`,\n            children: birthdayMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Formbox, {\n          children: [/*#__PURE__*/_jsxDEV(Intro, {\n            children: \"\\uBA54\\uC77C \\uC778\\uC99D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(CertificationInput, {\n              name: \"certificationNumber\",\n              value: certificationNumber,\n              type: \"text\",\n              onChange: onChangeCertificationNumber,\n              placeholder: \"\\uC778\\uC99D\\uBC88\\uD638 \\uC785\\uB825\",\n              required: true,\n              autoComplete: \"off\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n              type: \"button\",\n              onClick: getEmailCheck,\n              children: \"\\uC804\\uC1A1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(MainButton, {\n            radius: \"5px\",\n            color: \"#FFFFFF\",\n            background: \"#386FFE;\",\n            type: \"button\",\n            onClick: onEmailCheck,\n            disabled: certificationNumber.length > 0 ? false : true,\n            text: \"\\uC778\\uC99D \\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), certificationNumber.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `message ${isEmailCheck ? 'success' : 'error'}`,\n            children: emailCheckMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: /*#__PURE__*/_jsxDEV(MainButton, {\n          radius: \"15px\",\n          color: \"#FFFFFF\",\n          background: \"#386FFE;\",\n          type: \"submit\",\n          disabled: isNickname && isEmail && isPassword && isEmailCheck ? false : true,\n          text: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignupUser, \"PoifgaMOlflb2ZHtXstbPLU3d7E=\", false, function () {\n  return [useRecoilState, useNavigate];\n});\n\n_c8 = SignupUser;\nexport default SignupUser;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Input\");\n$RefreshReg$(_c3, \"CertificationInput\");\n$RefreshReg$(_c4, \"SendButton\");\n$RefreshReg$(_c5, \"InputContainer\");\n$RefreshReg$(_c6, \"Formbox\");\n$RefreshReg$(_c7, \"ButtonContainer\");\n$RefreshReg$(_c8, \"SignupUser\");","map":{"version":3,"sources":["/Users/yeoinsu/Desktop/Ari/frontend/src/pages/SignupUser.js"],"names":["React","useState","useNavigate","axios","styled","useRecoilState","MainButton","nicknameState","signUserData","Intro","div","Input","input","CertificationInput","SendButton","button","InputContainer","Formbox","ButtonContainer","SignupUser","uNickname","setuNickname","navigate","email","setEmail","password","setPassword","nickname","setNickname","birthday","setBirthday","emailMessage","setEmailMessage","passwordMessage","setPasswordMessage","nicknameMessage","setNicknameMessage","birthdayMessage","setBirthdayMessage","isEmail","setIsEmail","isPassword","setIsPassword","isNickname","setIsNickname","isBirthday","setIsBirthday","onChangeEmail","e","emailRegex","target","value","test","onChangePassword","passwordRegex","onChangeNickname","length","onChangeBirthday","birthdayRegex","certificationNumber","setCertificationNumber","onChangeCertificationNumber","emailCheck","setEmailCheck","emailCheckMessage","setEmailCheckMessage","isEmailCheck","setIsEmailCheck","getEmailCheck","get","then","res","console","log","data","onEmailCheck","onSubmit","preventDefault","result","alert"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useRecoilState } from 'recoil';\r\nimport MainButton from '../components/common/Mainbutton';\r\nimport { nicknameState } from '../state';\r\nimport { signUserData } from '../services/sign/signUserData';\r\n\r\nconst Intro = styled.div`\r\n    color: #3D3D3D;\r\n`;\r\n\r\nconst Input = styled.input`\r\n    width: 230px;\r\n    line-height: 22px;\r\n    border: 1px solid #DCDCDC;\r\n    border-radius: 5px;\r\n    padding: 9px 14px;\r\n    &::placeholder {\r\n        color: #A3A3A3;\r\n    }\r\n`;\r\n\r\nconst CertificationInput = styled.input`\r\n    width: 142px;\r\n    line-height: 22px;\r\n    border: 1px solid #DCDCDC;\r\n    border-radius: 5px;\r\n    padding: 9px 14px;\r\n    margin-bottom: 21px;\r\n    &::placeholder {\r\n        color: #A3A3A3;\r\n    }\r\n`;\r\n\r\nconst SendButton = styled.button`\r\n    width: 76px;\r\n    line-height: 41px;\r\n    border-style: initial;\r\n    border-radius: 5px;\r\n    color: #FFFFFF;\r\n    background: #386FFE;\r\n    margin-bottom: 11px;\r\n    margin-left: 12px;\r\n`;\r\n\r\nconst InputContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 65px;\r\n`;\r\n\r\nconst Formbox = styled.div`\r\n    margin-bottom: 20px;\r\n    .message {\r\n        font-size: 11px;\r\n        letter-spacing: -1px;\r\n        margin: 0;\r\n        &.success {\r\n            color: #8f8c8b;\r\n        }\r\n        &.error {\r\n            color: #ff2727;\r\n        }\r\n    }\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-bottom: 83px;\r\n`;\r\n\r\nconst SignupUser = () => {\r\n    const [uNickname, setuNickname] = useRecoilState(nicknameState);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    // 이메일, 비밀번호, 닉네임, 생년월일\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [nickname, setNickname] = useState(\"\");\r\n    const [birthday, setBirthday] = useState(\"\");\r\n\r\n    // 오류 메세지 상태 저장\r\n    const [emailMessage, setEmailMessage] = useState(\"\");\r\n    const [passwordMessage, setPasswordMessage] = useState(\"\");\r\n    const [nicknameMessage, setNicknameMessage] = useState(\"\");\r\n    const [birthdayMessage, setBirthdayMessage] = useState(\"\");\r\n\r\n    // 유효성 검사\r\n    const [isEmail, setIsEmail] = useState(false);\r\n    const [isPassword, setIsPassword] = useState(false);\r\n    const [isNickname, setIsNickname] = useState(false);\r\n    const [isBirthday, setIsBirthday] = useState(false);\r\n\r\n    // 이메일\r\n    const onChangeEmail = (e) => {\r\n        const emailRegex =\r\n            /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n        setEmail(e.target.value);\r\n\r\n        if (!emailRegex.test(e.target.value)) {\r\n            setEmailMessage('이메일 형식을 다시 확인해주세요.');\r\n            setIsEmail(false);\r\n        } else {\r\n            setEmailMessage('올바른 이메일 형식입니다.');\r\n            setIsEmail(true);\r\n        }\r\n    };\r\n\r\n    // 비밀번호\r\n    const onChangePassword = (e) => {\r\n        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,25}$/;\r\n        setPassword(e.target.value);\r\n\r\n        if (!passwordRegex.test(e.target.value)) {\r\n            setPasswordMessage('숫자+영문자+특수문자 조합으로 8자리 이상 입력해주세요.');\r\n            setIsPassword(false);\r\n        } else {\r\n            setPasswordMessage('안전한 비밀번호입니다.');\r\n            setIsPassword(true);\r\n        }\r\n    };\r\n\r\n    // 닉네임\r\n    const onChangeNickname = (e) => {\r\n        setNickname(e.target.value)\r\n        if (e.target.value.length < 2 || e.target.value.length > 5) {\r\n            setNicknameMessage('2글자 이상 5글자 미만으로 입력해주세요.');\r\n            setIsNickname(false);\r\n        } else {\r\n            setNicknameMessage('올바른 닉네임 형식입니다.')\r\n            setIsNickname(true)\r\n        }\r\n    };\r\n\r\n    // 생년월일\r\n    const onChangeBirthday = (e) => {\r\n        const birthdayRegex = /^(19[0-9][0-9]|20\\d{2})(0[0-9]|1[0-2])(0[1-9]|[1-2][0-9]|3[0-1])$/;\r\n        setBirthday(e.target.value);\r\n\r\n        if (!birthdayRegex.test(e.target.value)) {\r\n            setBirthdayMessage('생년월일 8자리를 입력해주세요.');\r\n            setIsBirthday(false);\r\n        } else {\r\n            setBirthdayMessage('올바른 생년월일 형식입니다.');\r\n            setIsBirthday(true);\r\n        }\r\n    };\r\n\r\n    // 입력한 인증번호\r\n    const [certificationNumber, setCertificationNumber] = useState(\"\");\r\n\r\n    const onChangeCertificationNumber = (e) => {\r\n        setCertificationNumber(e.target.value);\r\n    };\r\n\r\n    // 인증번호 확인\r\n    const [emailCheck, setEmailCheck] = useState(\"\");\r\n    const [emailCheckMessage, setEmailCheckMessage] = useState(\"\");\r\n    const [isEmailCheck, setIsEmailCheck] = useState(false);\r\n\r\n    // 이메일로 인증번호 보내고, 보낸 인증번호를 emailCheck에 저장\r\n    const getEmailCheck = async () => {\r\n        try {\r\n            await axios\r\n                .get(`http://.../signup/certification?email=${email}`)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setEmailCheck(res.data);\r\n                });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    const onEmailCheck = () => {\r\n        console.log(certificationNumber);\r\n        console.log(emailCheck);\r\n        if (certificationNumber !== emailCheck) {\r\n            setEmailCheckMessage('잘못된 인증번호입니다.');\r\n            setIsEmailCheck(false);\r\n        } else {\r\n            setEmailCheckMessage('인증에 성공했습니다.');\r\n            setIsEmailCheck(true);\r\n        }\r\n    };\r\n    \r\n    const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const result = await signUserData({\r\n            email: email,\r\n            password: password,\r\n            nickname: nickname,\r\n            birthday: birthday,\r\n        });\r\n        setuNickname(result); // recoil\r\n\r\n        alert(\"회원가입이 완료되었습니다.\");\r\n        navigate(\"/login\"); // 로그인 공통 페이지로 이동\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit}>\r\n                <InputContainer>\r\n                    <Formbox>\r\n                        <Intro>이메일 주소</Intro>\r\n                        <Input\r\n                            name=\"email\"\r\n                            value={email}\r\n                            type=\"email\"\r\n                            onChange={onChangeEmail}\r\n                            placeholder=\"이메일 주소 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {email.length > 0 && <p className={`message ${isEmail ? 'success' : 'error'}`}>{emailMessage}</p>}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        <Intro>비밀번호</Intro>\r\n                        <Input\r\n                            name=\"password\"\r\n                            value={password}\r\n                            type=\"password\"\r\n                            onChange={onChangePassword}\r\n                            placeholder=\"비밀번호 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {password.length > 0 && <p className={`message ${isPassword ? 'success' : 'error'}`}>{passwordMessage}</p>}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        <Intro>닉네임</Intro>\r\n                        <Input\r\n                            name=\"nickname\"\r\n                            value={nickname}\r\n                            type=\"text\"\r\n                            onChange={onChangeNickname}\r\n                            placeholder=\"닉네임 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {nickname.length > 0 && <p className={`message ${isNickname ? 'success' : 'error'}`}>{nicknameMessage}</p>}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        <Intro>생년월일</Intro>\r\n                        <Input\r\n                            name=\"birthday\"\r\n                            value={birthday}\r\n                            type=\"text\"\r\n                            onChange={onChangeBirthday}\r\n                            placeholder=\"생년월일 입력\"\r\n                            required\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        {birthday.length > 0 && <p className={`message ${isBirthday ? 'success' : 'error'}`}>{birthdayMessage}</p>}\r\n                    </Formbox>\r\n                    <Formbox>\r\n                        <Intro>메일 인증</Intro>\r\n                        <div>\r\n                            <CertificationInput\r\n                                name=\"certificationNumber\"\r\n                                value={certificationNumber}\r\n                                type=\"text\"\r\n                                onChange={onChangeCertificationNumber}\r\n                                placeholder=\"인증번호 입력\"\r\n                                required\r\n                                autoComplete=\"off\"\r\n                            />\r\n                            <SendButton type=\"button\" onClick={getEmailCheck}>전송</SendButton>\r\n                        </div>\r\n                        <MainButton\r\n                            radius=\"5px\"\r\n                            color=\"#FFFFFF\"\r\n                            background=\"#386FFE;\"\r\n                            type=\"button\"\r\n                            onClick={onEmailCheck}\r\n                            disabled={(certificationNumber.length > 0) ? false : true}\r\n                            text=\"인증 확인\"\r\n                        />\r\n                        {certificationNumber.length > 0 && <p className={`message ${isEmailCheck ? 'success' : 'error'}`}>{emailCheckMessage}</p>}\r\n                    </Formbox>\r\n                </InputContainer>\r\n                <ButtonContainer>\r\n                    <MainButton\r\n                        radius=\"15px\"\r\n                        color=\"#FFFFFF\"\r\n                        background=\"#386FFE;\"\r\n                        type=\"submit\"\r\n                        disabled={(isNickname && isEmail && isPassword && isEmailCheck) ? false : true}\r\n                        text=\"회원가입\"\r\n                    />\r\n                </ButtonContainer>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignupUser;"]},"metadata":{},"sourceType":"module"}